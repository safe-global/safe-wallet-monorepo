/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../../../../../common";

export declare namespace SocialRecoveryModule {
  export type RecoveryRequestStruct = {
    guardiansApprovalCount: BigNumberish;
    newThreshold: BigNumberish;
    executeAfter: BigNumberish;
    newOwners: AddressLike[];
  };

  export type RecoveryRequestStructOutput = [
    guardiansApprovalCount: bigint,
    newThreshold: bigint,
    executeAfter: bigint,
    newOwners: string[]
  ] & {
    guardiansApprovalCount: bigint;
    newThreshold: bigint;
    executeAfter: bigint;
    newOwners: string[];
  };

  export type SignatureDataStruct = {
    signer: AddressLike;
    signature: BytesLike;
  };

  export type SignatureDataStructOutput = [
    signer: string,
    signature: string
  ] & { signer: string; signature: string };
}

export interface SocialRecoveryModuleInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "NAME"
      | "VERSION"
      | "addGuardianWithThreshold"
      | "cancelRecovery"
      | "changeThreshold"
      | "confirmRecovery"
      | "domainSeparator"
      | "encodeRecoveryData"
      | "executeRecovery"
      | "finalizeRecovery"
      | "getChainId"
      | "getGuardians"
      | "getRecoveryApprovals"
      | "getRecoveryHash"
      | "getRecoveryRequest"
      | "guardiansCount"
      | "hasGuardianApproved"
      | "invalidateNonce"
      | "isGuardian"
      | "multiConfirmRecovery"
      | "nonce"
      | "revokeGuardianWithThreshold"
      | "threshold"
      | "validateGuardianSignature"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "ChangedThreshold"
      | "GuardianAdded"
      | "GuardianRevoked"
      | "NonceInvalidated"
      | "RecoveryCanceled"
      | "RecoveryExecuted"
      | "RecoveryFinalized"
  ): EventFragment;

  encodeFunctionData(functionFragment: "NAME", values?: undefined): string;
  encodeFunctionData(functionFragment: "VERSION", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "addGuardianWithThreshold",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelRecovery",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "changeThreshold",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "confirmRecovery",
    values: [AddressLike, AddressLike[], BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "domainSeparator",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "encodeRecoveryData",
    values: [AddressLike, AddressLike[], BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "executeRecovery",
    values: [AddressLike, AddressLike[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "finalizeRecovery",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getChainId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGuardians",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRecoveryApprovals",
    values: [AddressLike, AddressLike[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRecoveryHash",
    values: [AddressLike, AddressLike[], BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRecoveryRequest",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "guardiansCount",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasGuardianApproved",
    values: [AddressLike, AddressLike, AddressLike[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "invalidateNonce",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isGuardian",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "multiConfirmRecovery",
    values: [
      AddressLike,
      AddressLike[],
      BigNumberish,
      SocialRecoveryModule.SignatureDataStruct[],
      boolean
    ]
  ): string;
  encodeFunctionData(functionFragment: "nonce", values: [AddressLike]): string;
  encodeFunctionData(
    functionFragment: "revokeGuardianWithThreshold",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "threshold",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "validateGuardianSignature",
    values: [AddressLike, BytesLike, AddressLike, BytesLike]
  ): string;

  decodeFunctionResult(functionFragment: "NAME", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "VERSION", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addGuardianWithThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelRecovery",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "confirmRecovery",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "domainSeparator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "encodeRecoveryData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeRecovery",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "finalizeRecovery",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getChainId", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getGuardians",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRecoveryApprovals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRecoveryHash",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRecoveryRequest",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "guardiansCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasGuardianApproved",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "invalidateNonce",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isGuardian", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "multiConfirmRecovery",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "nonce", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "revokeGuardianWithThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "threshold", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "validateGuardianSignature",
    data: BytesLike
  ): Result;
}

export namespace ChangedThresholdEvent {
  export type InputTuple = [wallet: AddressLike, threshold: BigNumberish];
  export type OutputTuple = [wallet: string, threshold: bigint];
  export interface OutputObject {
    wallet: string;
    threshold: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GuardianAddedEvent {
  export type InputTuple = [wallet: AddressLike, guardian: AddressLike];
  export type OutputTuple = [wallet: string, guardian: string];
  export interface OutputObject {
    wallet: string;
    guardian: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GuardianRevokedEvent {
  export type InputTuple = [wallet: AddressLike, guardian: AddressLike];
  export type OutputTuple = [wallet: string, guardian: string];
  export interface OutputObject {
    wallet: string;
    guardian: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NonceInvalidatedEvent {
  export type InputTuple = [wallet: AddressLike, nonce: BigNumberish];
  export type OutputTuple = [wallet: string, nonce: bigint];
  export interface OutputObject {
    wallet: string;
    nonce: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RecoveryCanceledEvent {
  export type InputTuple = [wallet: AddressLike, nonce: BigNumberish];
  export type OutputTuple = [wallet: string, nonce: bigint];
  export interface OutputObject {
    wallet: string;
    nonce: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RecoveryExecutedEvent {
  export type InputTuple = [
    wallet: AddressLike,
    newOwners: AddressLike[],
    newThreshold: BigNumberish,
    nonce: BigNumberish,
    executeAfter: BigNumberish,
    guardiansApprovalCount: BigNumberish
  ];
  export type OutputTuple = [
    wallet: string,
    newOwners: string[],
    newThreshold: bigint,
    nonce: bigint,
    executeAfter: bigint,
    guardiansApprovalCount: bigint
  ];
  export interface OutputObject {
    wallet: string;
    newOwners: string[];
    newThreshold: bigint;
    nonce: bigint;
    executeAfter: bigint;
    guardiansApprovalCount: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RecoveryFinalizedEvent {
  export type InputTuple = [
    wallet: AddressLike,
    newOwners: AddressLike[],
    newThreshold: BigNumberish,
    nonce: BigNumberish
  ];
  export type OutputTuple = [
    wallet: string,
    newOwners: string[],
    newThreshold: bigint,
    nonce: bigint
  ];
  export interface OutputObject {
    wallet: string;
    newOwners: string[];
    newThreshold: bigint;
    nonce: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface SocialRecoveryModule extends BaseContract {
  connect(runner?: ContractRunner | null): SocialRecoveryModule;
  waitForDeployment(): Promise<this>;

  interface: SocialRecoveryModuleInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  NAME: TypedContractMethod<[], [string], "view">;

  VERSION: TypedContractMethod<[], [string], "view">;

  addGuardianWithThreshold: TypedContractMethod<
    [_guardian: AddressLike, _threshold: BigNumberish],
    [void],
    "nonpayable"
  >;

  cancelRecovery: TypedContractMethod<[], [void], "nonpayable">;

  changeThreshold: TypedContractMethod<
    [_threshold: BigNumberish],
    [void],
    "nonpayable"
  >;

  confirmRecovery: TypedContractMethod<
    [
      _wallet: AddressLike,
      _newOwners: AddressLike[],
      _newThreshold: BigNumberish,
      _execute: boolean
    ],
    [void],
    "nonpayable"
  >;

  domainSeparator: TypedContractMethod<[], [string], "view">;

  encodeRecoveryData: TypedContractMethod<
    [
      _wallet: AddressLike,
      _newOwners: AddressLike[],
      _newThreshold: BigNumberish,
      _nonce: BigNumberish
    ],
    [string],
    "view"
  >;

  executeRecovery: TypedContractMethod<
    [
      _wallet: AddressLike,
      _newOwners: AddressLike[],
      _newThreshold: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  finalizeRecovery: TypedContractMethod<
    [_wallet: AddressLike],
    [void],
    "nonpayable"
  >;

  getChainId: TypedContractMethod<[], [bigint], "view">;

  getGuardians: TypedContractMethod<[_wallet: AddressLike], [string[]], "view">;

  getRecoveryApprovals: TypedContractMethod<
    [
      _wallet: AddressLike,
      _newOwners: AddressLike[],
      _newThreshold: BigNumberish
    ],
    [bigint],
    "view"
  >;

  getRecoveryHash: TypedContractMethod<
    [
      _wallet: AddressLike,
      _newOwners: AddressLike[],
      _newThreshold: BigNumberish,
      _nonce: BigNumberish
    ],
    [string],
    "view"
  >;

  getRecoveryRequest: TypedContractMethod<
    [_wallet: AddressLike],
    [SocialRecoveryModule.RecoveryRequestStructOutput],
    "view"
  >;

  guardiansCount: TypedContractMethod<[_wallet: AddressLike], [bigint], "view">;

  hasGuardianApproved: TypedContractMethod<
    [
      _wallet: AddressLike,
      _guardian: AddressLike,
      _newOwners: AddressLike[],
      _newThreshold: BigNumberish
    ],
    [boolean],
    "view"
  >;

  invalidateNonce: TypedContractMethod<[], [void], "nonpayable">;

  isGuardian: TypedContractMethod<
    [_wallet: AddressLike, _guardian: AddressLike],
    [boolean],
    "view"
  >;

  multiConfirmRecovery: TypedContractMethod<
    [
      _wallet: AddressLike,
      _newOwners: AddressLike[],
      _newThreshold: BigNumberish,
      _signatures: SocialRecoveryModule.SignatureDataStruct[],
      _execute: boolean
    ],
    [void],
    "nonpayable"
  >;

  nonce: TypedContractMethod<[_wallet: AddressLike], [bigint], "view">;

  revokeGuardianWithThreshold: TypedContractMethod<
    [
      _prevGuardian: AddressLike,
      _guardian: AddressLike,
      _threshold: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  threshold: TypedContractMethod<[_wallet: AddressLike], [bigint], "view">;

  validateGuardianSignature: TypedContractMethod<
    [
      _wallet: AddressLike,
      _signHash: BytesLike,
      _signer: AddressLike,
      _signature: BytesLike
    ],
    [void],
    "view"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "NAME"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "VERSION"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "addGuardianWithThreshold"
  ): TypedContractMethod<
    [_guardian: AddressLike, _threshold: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "cancelRecovery"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "changeThreshold"
  ): TypedContractMethod<[_threshold: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "confirmRecovery"
  ): TypedContractMethod<
    [
      _wallet: AddressLike,
      _newOwners: AddressLike[],
      _newThreshold: BigNumberish,
      _execute: boolean
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "domainSeparator"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "encodeRecoveryData"
  ): TypedContractMethod<
    [
      _wallet: AddressLike,
      _newOwners: AddressLike[],
      _newThreshold: BigNumberish,
      _nonce: BigNumberish
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "executeRecovery"
  ): TypedContractMethod<
    [
      _wallet: AddressLike,
      _newOwners: AddressLike[],
      _newThreshold: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "finalizeRecovery"
  ): TypedContractMethod<[_wallet: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "getChainId"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getGuardians"
  ): TypedContractMethod<[_wallet: AddressLike], [string[]], "view">;
  getFunction(
    nameOrSignature: "getRecoveryApprovals"
  ): TypedContractMethod<
    [
      _wallet: AddressLike,
      _newOwners: AddressLike[],
      _newThreshold: BigNumberish
    ],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRecoveryHash"
  ): TypedContractMethod<
    [
      _wallet: AddressLike,
      _newOwners: AddressLike[],
      _newThreshold: BigNumberish,
      _nonce: BigNumberish
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRecoveryRequest"
  ): TypedContractMethod<
    [_wallet: AddressLike],
    [SocialRecoveryModule.RecoveryRequestStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "guardiansCount"
  ): TypedContractMethod<[_wallet: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "hasGuardianApproved"
  ): TypedContractMethod<
    [
      _wallet: AddressLike,
      _guardian: AddressLike,
      _newOwners: AddressLike[],
      _newThreshold: BigNumberish
    ],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "invalidateNonce"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "isGuardian"
  ): TypedContractMethod<
    [_wallet: AddressLike, _guardian: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "multiConfirmRecovery"
  ): TypedContractMethod<
    [
      _wallet: AddressLike,
      _newOwners: AddressLike[],
      _newThreshold: BigNumberish,
      _signatures: SocialRecoveryModule.SignatureDataStruct[],
      _execute: boolean
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "nonce"
  ): TypedContractMethod<[_wallet: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "revokeGuardianWithThreshold"
  ): TypedContractMethod<
    [
      _prevGuardian: AddressLike,
      _guardian: AddressLike,
      _threshold: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "threshold"
  ): TypedContractMethod<[_wallet: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "validateGuardianSignature"
  ): TypedContractMethod<
    [
      _wallet: AddressLike,
      _signHash: BytesLike,
      _signer: AddressLike,
      _signature: BytesLike
    ],
    [void],
    "view"
  >;

  getEvent(
    key: "ChangedThreshold"
  ): TypedContractEvent<
    ChangedThresholdEvent.InputTuple,
    ChangedThresholdEvent.OutputTuple,
    ChangedThresholdEvent.OutputObject
  >;
  getEvent(
    key: "GuardianAdded"
  ): TypedContractEvent<
    GuardianAddedEvent.InputTuple,
    GuardianAddedEvent.OutputTuple,
    GuardianAddedEvent.OutputObject
  >;
  getEvent(
    key: "GuardianRevoked"
  ): TypedContractEvent<
    GuardianRevokedEvent.InputTuple,
    GuardianRevokedEvent.OutputTuple,
    GuardianRevokedEvent.OutputObject
  >;
  getEvent(
    key: "NonceInvalidated"
  ): TypedContractEvent<
    NonceInvalidatedEvent.InputTuple,
    NonceInvalidatedEvent.OutputTuple,
    NonceInvalidatedEvent.OutputObject
  >;
  getEvent(
    key: "RecoveryCanceled"
  ): TypedContractEvent<
    RecoveryCanceledEvent.InputTuple,
    RecoveryCanceledEvent.OutputTuple,
    RecoveryCanceledEvent.OutputObject
  >;
  getEvent(
    key: "RecoveryExecuted"
  ): TypedContractEvent<
    RecoveryExecutedEvent.InputTuple,
    RecoveryExecutedEvent.OutputTuple,
    RecoveryExecutedEvent.OutputObject
  >;
  getEvent(
    key: "RecoveryFinalized"
  ): TypedContractEvent<
    RecoveryFinalizedEvent.InputTuple,
    RecoveryFinalizedEvent.OutputTuple,
    RecoveryFinalizedEvent.OutputObject
  >;

  filters: {
    "ChangedThreshold(address,uint256)": TypedContractEvent<
      ChangedThresholdEvent.InputTuple,
      ChangedThresholdEvent.OutputTuple,
      ChangedThresholdEvent.OutputObject
    >;
    ChangedThreshold: TypedContractEvent<
      ChangedThresholdEvent.InputTuple,
      ChangedThresholdEvent.OutputTuple,
      ChangedThresholdEvent.OutputObject
    >;

    "GuardianAdded(address,address)": TypedContractEvent<
      GuardianAddedEvent.InputTuple,
      GuardianAddedEvent.OutputTuple,
      GuardianAddedEvent.OutputObject
    >;
    GuardianAdded: TypedContractEvent<
      GuardianAddedEvent.InputTuple,
      GuardianAddedEvent.OutputTuple,
      GuardianAddedEvent.OutputObject
    >;

    "GuardianRevoked(address,address)": TypedContractEvent<
      GuardianRevokedEvent.InputTuple,
      GuardianRevokedEvent.OutputTuple,
      GuardianRevokedEvent.OutputObject
    >;
    GuardianRevoked: TypedContractEvent<
      GuardianRevokedEvent.InputTuple,
      GuardianRevokedEvent.OutputTuple,
      GuardianRevokedEvent.OutputObject
    >;

    "NonceInvalidated(address,uint256)": TypedContractEvent<
      NonceInvalidatedEvent.InputTuple,
      NonceInvalidatedEvent.OutputTuple,
      NonceInvalidatedEvent.OutputObject
    >;
    NonceInvalidated: TypedContractEvent<
      NonceInvalidatedEvent.InputTuple,
      NonceInvalidatedEvent.OutputTuple,
      NonceInvalidatedEvent.OutputObject
    >;

    "RecoveryCanceled(address,uint256)": TypedContractEvent<
      RecoveryCanceledEvent.InputTuple,
      RecoveryCanceledEvent.OutputTuple,
      RecoveryCanceledEvent.OutputObject
    >;
    RecoveryCanceled: TypedContractEvent<
      RecoveryCanceledEvent.InputTuple,
      RecoveryCanceledEvent.OutputTuple,
      RecoveryCanceledEvent.OutputObject
    >;

    "RecoveryExecuted(address,address[],uint256,uint256,uint64,uint256)": TypedContractEvent<
      RecoveryExecutedEvent.InputTuple,
      RecoveryExecutedEvent.OutputTuple,
      RecoveryExecutedEvent.OutputObject
    >;
    RecoveryExecuted: TypedContractEvent<
      RecoveryExecutedEvent.InputTuple,
      RecoveryExecutedEvent.OutputTuple,
      RecoveryExecutedEvent.OutputObject
    >;

    "RecoveryFinalized(address,address[],uint256,uint256)": TypedContractEvent<
      RecoveryFinalizedEvent.InputTuple,
      RecoveryFinalizedEvent.OutputTuple,
      RecoveryFinalizedEvent.OutputObject
    >;
    RecoveryFinalized: TypedContractEvent<
      RecoveryFinalizedEvent.InputTuple,
      RecoveryFinalizedEvent.OutputTuple,
      RecoveryFinalizedEvent.OutputObject
    >;
  };
}
