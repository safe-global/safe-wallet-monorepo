import type { TransactionData } from '@safe-global/safe-gateway-typescript-sdk'
import { _getFactoryAddressAndSetupData } from '../nested-safes'

describe('Nested Safes', () => {
  describe('getFactoryAddressAndSetupData', () => {
    it('should return the factory address and setup data for direct createProxyWithNonce calls', () => {
      const txData = {
        dataDecoded: {
          method: 'createProxyWithNonce',
          parameters: [
            {
              name: '_singleton',
              type: 'address',
              value: '0x41675C099F32341bf84BFc5382aF534df5C7461a',
              valueDecoded: null,
            },
            {
              name: 'initializer',
              type: 'bytes',
              value:
                '0xb63e800d00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000bd89a1ce4dde368ffab0ec35506eece0b1ffdc540000000000000000000000000000000000000000000000000000000000000140000000000000000000000000fd0732dc9e303f09fcef3a7388ad10a83459ec99000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000057c26d4d117c926a872814fa46c179691f580e840000000000000000000000000000000000000000000000000000000000000024fe51f64300000000000000000000000029fcb43b46531bca003ddc8fcb67ffe91900c76200000000000000000000000000000000000000000000000000000000',
              valueDecoded: null,
            },
            {
              name: 'saltNonce',
              type: 'uint256',
              value: '1739277192719',
              valueDecoded: null,
            },
          ],
        },
        to: {
          value: '0x4e1DCf7AD4e460CfD30791CCC4F9c8a4f820ec67',
          name: 'SafeProxyFactory 1.4.1',
          logoUri:
            'https://safe-transaction-assets.staging.5afe.dev/contracts/logos/0x4e1DCf7AD4e460CfD30791CCC4F9c8a4f820ec67.png',
        },
      } as unknown as TransactionData

      const result = _getFactoryAddressAndSetupData(txData)

      expect(result).toEqual({
        factoryAddress: '0x4e1DCf7AD4e460CfD30791CCC4F9c8a4f820ec67',
        singleton: '0x41675C099F32341bf84BFc5382aF534df5C7461a',
        initializer:
          '0xb63e800d00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000bd89a1ce4dde368ffab0ec35506eece0b1ffdc540000000000000000000000000000000000000000000000000000000000000140000000000000000000000000fd0732dc9e303f09fcef3a7388ad10a83459ec99000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000057c26d4d117c926a872814fa46c179691f580e840000000000000000000000000000000000000000000000000000000000000024fe51f64300000000000000000000000029fcb43b46531bca003ddc8fcb67ffe91900c76200000000000000000000000000000000000000000000000000000000',
        saltNonce: '1739277192719',
      })
    })

    it('should return the factory address and setup data for createProxyWithNonce calls in a multiSend', () => {
      const txData = {
        dataDecoded: {
          method: 'multiSend',
          parameters: [
            {
              name: 'transactions',
              type: 'bytes',
              value:
                '0x004e1dcf7ad4e460cfd30791ccc4f9c8a4f820ec67000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002441688f0b900000000000000000000000041675c099f32341bf84bfc5382af534df5c7461a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000194f500278f00000000000000000000000000000000000000000000000000000000000001a4b63e800d00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000bd89a1ce4dde368ffab0ec35506eece0b1ffdc540000000000000000000000000000000000000000000000000000000000000140000000000000000000000000fd0732dc9e303f09fcef3a7388ad10a83459ec99000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000057c26d4d117c926a872814fa46c179691f580e840000000000000000000000000000000000000000000000000000000000000024fe51f64300000000000000000000000029fcb43b46531bca003ddc8fcb67ffe91900c7620000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002df9edaab4aab795339b334c9152eec7f27aeabc0000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000',
              valueDecoded: [
                {
                  operation: 0,
                  to: '0x4e1DCf7AD4e460CfD30791CCC4F9c8a4f820ec67',
                  value: '0',
                  data: '0x1688f0b900000000000000000000000041675c099f32341bf84bfc5382af534df5c7461a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000194f500278f00000000000000000000000000000000000000000000000000000000000001a4b63e800d00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000bd89a1ce4dde368ffab0ec35506eece0b1ffdc540000000000000000000000000000000000000000000000000000000000000140000000000000000000000000fd0732dc9e303f09fcef3a7388ad10a83459ec99000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000057c26d4d117c926a872814fa46c179691f580e840000000000000000000000000000000000000000000000000000000000000024fe51f64300000000000000000000000029fcb43b46531bca003ddc8fcb67ffe91900c7620000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                  dataDecoded: {
                    method: 'createProxyWithNonce',
                    parameters: [
                      {
                        name: '_singleton',
                        type: 'address',
                        value: '0x41675C099F32341bf84BFc5382aF534df5C7461a',
                      },
                      {
                        name: 'initializer',
                        type: 'bytes',
                        value:
                          '0xb63e800d00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000bd89a1ce4dde368ffab0ec35506eece0b1ffdc540000000000000000000000000000000000000000000000000000000000000140000000000000000000000000fd0732dc9e303f09fcef3a7388ad10a83459ec99000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000057c26d4d117c926a872814fa46c179691f580e840000000000000000000000000000000000000000000000000000000000000024fe51f64300000000000000000000000029fcb43b46531bca003ddc8fcb67ffe91900c76200000000000000000000000000000000000000000000000000000000',
                      },
                      {
                        name: 'saltNonce',
                        type: 'uint256',
                        value: '1739277215631',
                      },
                    ],
                  },
                },
                {
                  operation: 0,
                  to: '0x2df9edAAb4Aab795339b334C9152EeC7f27aeAbc',
                  value: '1000000000000000000',
                  data: null,
                  dataDecoded: null,
                },
              ],
            },
          ],
        },
      } as unknown as TransactionData

      const result = _getFactoryAddressAndSetupData(txData)

      expect(result).toEqual({
        factoryAddress: '0x4e1DCf7AD4e460CfD30791CCC4F9c8a4f820ec67',
        singleton: '0x41675C099F32341bf84BFc5382aF534df5C7461a',
        initializer:
          '0xb63e800d00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000bd89a1ce4dde368ffab0ec35506eece0b1ffdc540000000000000000000000000000000000000000000000000000000000000140000000000000000000000000fd0732dc9e303f09fcef3a7388ad10a83459ec99000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000057c26d4d117c926a872814fa46c179691f580e840000000000000000000000000000000000000000000000000000000000000024fe51f64300000000000000000000000029fcb43b46531bca003ddc8fcb67ffe91900c76200000000000000000000000000000000000000000000000000000000',
        saltNonce: '1739277215631',
      })
    })

    it('should throw an error if the method is invalid', () => {
      const txData = {
        dataDecoded: {
          method: 'invalid',
          parameters: [],
        },
      } as unknown as TransactionData

      expect(() => _getFactoryAddressAndSetupData(txData)).toThrow('Invalid method')
    })

    it('should throw an error if the factory address is missing', () => {
      const txData = {
        dataDecoded: {
          method: 'createProxyWithNonce',
          parameters: [],
        },
        to: {
          value: null,
        },
      } as unknown as TransactionData

      expect(() => _getFactoryAddressAndSetupData(txData)).toThrow('Missing factory address')
    })

    it('should throw an error if the parameters are invalid', () => {
      const txData = {
        dataDecoded: {
          method: 'createProxyWithNonce',
        },
        to: {
          value: '0x4e1DCf7AD4e460CfD30791CCC4F9c8a4f820ec67',
        },
      } as unknown as TransactionData

      expect(() => _getFactoryAddressAndSetupData(txData)).toThrow('Invalid parameters')
    })

    it.each(['_singleton', 'initializer', 'saltNonce'])('should throw an error if the %s is invalid', (name) => {
      const txData = {
        dataDecoded: {
          method: 'createProxyWithNonce',
          parameters: [
            {
              name: '_singleton',
              type: 'address',
              value: '0x41675C099F32341bf84BFc5382aF534df5C7461a',
              valueDecoded: null,
            },
            {
              name: 'initializer',
              type: 'bytes',
              value:
                '0xb63e800d00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000bd89a1ce4dde368ffab0ec35506eece0b1ffdc540000000000000000000000000000000000000000000000000000000000000140000000000000000000000000fd0732dc9e303f09fcef3a7388ad10a83459ec99000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000057c26d4d117c926a872814fa46c179691f580e840000000000000000000000000000000000000000000000000000000000000024fe51f64300000000000000000000000029fcb43b46531bca003ddc8fcb67ffe91900c76200000000000000000000000000000000000000000000000000000000',
              valueDecoded: null,
            },
            {
              name: 'saltNonce',
              type: 'uint256',
              value: '1739277192719',
              valueDecoded: null,
            },
          ],
        },
        to: {
          value: '0x4e1DCf7AD4e460CfD30791CCC4F9c8a4f820ec67',
        },
      } as unknown as TransactionData
      const index = txData.dataDecoded?.parameters?.findIndex((parameter) => parameter.name === name)
      // @ts-expect-error - as txData is const, it expects new value to be string
      txData.dataDecoded.parameters[index].value = null

      expect(() => _getFactoryAddressAndSetupData(txData)).toThrow('Invalid parameter values')
    })
  })
})
