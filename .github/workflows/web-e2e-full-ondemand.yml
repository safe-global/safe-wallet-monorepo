name: Web Full Regression on demand tests

on:
  workflow_run:
    workflows: ['Web Build']
    types: [completed]
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * 1-5'

permissions:
  contents: read
  actions: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e:
    if: |
      ${{
        github.event_name != 'workflow_run' ||
        (
          github.event.workflow_run.conclusion == 'success' &&
          (
            github.event.workflow_run.event != 'pull_request' ||
            github.event.workflow_run.head_repository.full_name == github.repository
          )
        )
      }}
    runs-on: ubuntu-latest
    timeout-minutes: 40
    name: Cypress Full Regression on demand tests
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2, 3, 4, 5, 6, 7, 8]
    steps:
      - uses: actions/checkout@v5

      - name: Download build artifact
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: apps/web
          run-id: ${{ github.event.workflow_run.id }}

      - uses: ./.github/actions/cypress
        with:
          secrets: ${{ toJSON(secrets) }}
          spec: |
            cypress/e2e/happypath_2/*.cy.js
            cypress/e2e/regression/*.cy.js
            cypress/e2e/safe-apps/*.cy.js
            cypress/e2e/smoke/*.cy.js
          group: 'Full Regression on demand tests'
          tag: 'full_regression'
          skip-build: ${{ github.event_name == 'workflow_run' }}

      - name: Python setup
        if: always()
        uses: actions/setup-python@v6
        with:
          python-version: '3.x'

      - name: Install junitparser
        if: always()
        run: |
          pip install junitparser

      - name: Merge JUnit reports for TestRail
        if: always()
        run: |
          junitparser merge --suite-name "Root Suite" --glob "apps/web/reports/junit-*" "apps/web/reports/junit-report.xml"

      - name: TestRail CLI upload results
        if: always()
        run: |
          pip install trcli
          if ! trcli -y \
          -h https://gno.testrail.io/ \
          --project "Safe- Web App" \
          --username ${{ secrets.TESTRAIL_USERNAME }} \
          --password ${{ secrets.TESTRAIL_PASSWORD }} \
          parse_junit \
          --title "Full Regression Automated Tests, branch: ${GITHUB_REF_NAME}" \
          --run-description ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} \
          -f "apps/web/reports/junit-report.xml"; then
            echo -e "\e[41;32mTestRail upload failed. Pipeline will continue, please check the upload process.\e[0m"
          fi
