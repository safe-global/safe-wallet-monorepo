name: Web Release

on:
  workflow_run:
    workflows: ['Web Build']
    types: [completed]

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'release' }}
    permissions:
      attestations: write
      contents: write
      id-token: write
      actions: read

    runs-on: ubuntu-latest

    name: Deploy release

    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 0

      - name: Determine release tag
        run: |
          git fetch --tags
          TAG_NAME=$(git tag --points-at HEAD)
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "ARCHIVE_NAME=${{ github.event.repository.name }}-$TAG_NAME" >> $GITHUB_ENV

      - uses: ./.github/actions/yarn

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: apps/web
          run-id: ${{ github.event.workflow_run.id }}

      - name: Fetch release info
        id: release
        run: |
          curl -sL \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            ${{ github.api_url }}/repos/${{ github.repository }}/releases/tags/${TAG_NAME} \
            > release.json
          echo "upload_url=$(jq -r .upload_url release.json)" >> $GITHUB_ENV

      - name: Add SRI to scripts
        run: node ./scripts/integrity-hashes.cjs
        working-directory: apps/web

      - name: Create archive
        run: tar -czf "$ARCHIVE_NAME".tar.gz out
        working-directory: apps/web

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-path: apps/web/${{ env.ARCHIVE_NAME }}.tar.gz

      - name: Create checksum
        run: sha256sum "$ARCHIVE_NAME".tar.gz > "$ARCHIVE_NAME-sha256-checksum.txt"
        working-directory: apps/web

      - name: Upload archive as release asset
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ env.upload_url }}
          asset_path: apps/web/${{ env.ARCHIVE_NAME }}.tar.gz

      - name: Upload archive as release asset
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ env.upload_url }}
          asset_path: apps/web/${{ env.ARCHIVE_NAME }}-sha256-checksum.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Script to upload release files
      - name: Upload release build files for production
        env:
          BUCKET: s3://${{ secrets.AWS_STAGING_BUCKET_NAME }}/releases/${{ env.TAG_NAME }}
          CHECKSUM_FILE: ${{ env.ARCHIVE_NAME }}-sha256-checksum.txt
        run: bash ./scripts/github/s3_upload.sh
        working-directory: apps/web

      # Script to prepare production deployments
      - name: Prepare deployment
        run: bash ./scripts/github/prepare_production_deployment.sh
        working-directory: apps/web
        env:
          PROD_DEPLOYMENT_HOOK_TOKEN: ${{ secrets.PROD_DEPLOYMENT_HOOK_TOKEN }}
          PROD_DEPLOYMENT_HOOK_URL: ${{ secrets.PROD_DEPLOYMENT_HOOK_URL }}
          VERSION_TAG: ${{ env.TAG_NAME }}
